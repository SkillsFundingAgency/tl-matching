- stage: AT_Tests

  jobs:
  - job:
    steps: 
    - powershell: |
        $IP = Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
        Write-Host "##vso[task.setvariable variable=TestRunnerOutboundIp]$IP"
      displayName: 'Get Outbound IP for SQL Server Firewall'

    # - template: '.\TLevelsDeployment.yml'
    #   parameters: 
    #     ResourceGroupName: '$(ResourceGroupName)'
    #     Subscription: 'S126-TL-Test-Service-Connection'
    #     TemplateFile: '$(System.DefaultWorkingDirectory)/tl-matching/drop/azure/test-db.template.json'
    #     #EnvironmentNameAbbreviation: $(Release.EnvironmentName)
    #     ArmOverrideParameters: '-environmentNameAbbreviation "$(Release.EnvironmentName)" -sharedEnvResourceGroup "$(SharedEnvResourceGroupName)" -sharedSQLServerName "$(SharedSQLServerName)" -sqlDatabaseSkuName "$(testSqlDatabaseSkuName)" -sqlDatabaseTier "$(testSqlDatabaseTier)" -testRunnerOutboundIp "$(TestRunnerOutboundIp)"'
    #     WorkerASPInstances:
    #     SharedASPName:
    #     SharedEnvResourceGroupName:
    #     SharedKeyVaultName:
    #     SharedSQLServerName:
    #     SQLDatabaseName:
    #     SQLServerAdminUsername:
    #     SQLServerAdminPassword:
    #     DacPacLocation:
    #     SQLDatabaseSkuName:
    #     SQLDatabaseTier:
    #     ConfigurationStorageConnectionString:
    #     UICustomHostName:
    #     CertificateName:
    #     XEmployerFeedbackTriggerXX:
    #     ProviderFeedbackTrigger:
    #     ProviderReferenceTrigger:
    #     ConfigPath:
    #     ConfigTargetFilename:
    #     ConfigStorageAccountName:


    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Or Update Resource Group action on $(ResourceGroupName)'
      inputs:
        azureSubscription: 'S126-TL-Dev-Service-Connection'
        resourceGroupName: '$(ResourceGroupName)'
        location: 'West Europe'
        csmFile: '$(System.DefaultWorkingDirectory)/tl-matching/drop/azure/test-db.template.json'
        overrideParameters: '-environmentNameAbbreviation "$(Release.EnvironmentName)" -sharedEnvResourceGroup "$(SharedEnvResourceGroupName)" -sharedSQLServerName "$(SharedSQLServerName)" -sqlDatabaseSkuName "$(testSqlDatabaseSkuName)" 
        -sqlDatabaseTier "$(testSqlDatabaseTier)" -testRunnerOutboundIp "$(TestRunnerOutboundIp)"'
        deploymentOutputs: TestARMOutputs

    - task: ARMOutputParserExtension@1
      displayName: 'Convert ARM Template Outputs to Variables'
      inputs:
        armOutput: '$(TestARMOutputs)'

    - task: GenerateEnvironmentConfiguration@3
      displayName: 'Inject Configuration'
      inputs:
        SourcePath: '$(System.DefaultWorkingDirectory)/tl-matching/drop/config'
        TargetFilename: Sfa.Tl.Matching.IntegrationTests.schema.json
        ServiceConnectionName: 'S126-TL-Dev-Service-Connection'
        StorageAccountName: '$(ConfigStorageAccountName)'
        TableName: Configuration

    - task: SqlAzureDacpacDeployment@1
      displayName: 'Azure SQL Publish'
      inputs:
        azureSubscription: 'S126-TL-Dev-Service-Connection'
        ServerName: '$(SharedSQLServerName).database.windows.net'
        DatabaseName: '$(TestSQLDatabaseName)' #TestSQLDatabaseName is an output from AzureResourceGroupDeployment
        SqlUsername: '$(SQLServerAdminUsername)'
        SqlPassword: '$(SQLServerAdminPassword)'
        DacpacFile: '$(System.DefaultWorkingDirectory)/tl-matching/drop/src/Sfa.Tl.Matching.Database/bin/Release/Sfa.Tl.Matching.Database.dacpac'
        AdditionalArguments: '/p:GenerateSmartDefaults=True'

    - task: ExtractFiles@1
      displayName: 'Extract Application Integration Tests'
      inputs:
        archiveFilePatterns: '$(System.DefaultWorkingDirectory)/tl-matching/drop/Sfa.Tl.Matching.Application.IntegrationTests.zip'
        destinationFolder: '$(System.DefaultWorkingDirectory)/tl-matching/drop/tests-app'

    - task: Tokenization@2
      displayName: 'Tokenization: Transform app file *.json'
      inputs:
        SourcePath: '$(System.DefaultWorkingDirectory)/tl-matching/drop/tests-app'
        TargetFileNames: '*.json'
        RequireVariable: true
    
    - task: DotNetCoreCLI@2
      displayName: 'Run Application Integration Tests'
      inputs:
        command: custom
        custom: vstest
        arguments: '$(System.DefaultWorkingDirectory)/tl-matching/drop/tests-app/Sfa.Tl.Matching.Application.IntegrationTests.dll /logger:trx'

    - task: PublishTestResults@2
      displayName: 'Publish Test Results **/TestResults/*.trx'
      inputs:
        testResultsFormat: VSTest
        testResultsFiles: '**/TestResults/*.trx'
        failTaskOnFailedTests: true

- stage: AT_Deploy
  variables:
    ResourceGroupName: '$(SharedEnvResourceGroupName)'
    SQLServerActiveDirectoryAdminLogin: 'TL DEV SQL ADM'
    SQLServerActiveDirectoryAdminObjectId: 'ede7deec-20a1-44ac-b5e0-289f5531ff59'
    ThreatDetectionEmailAddress: 'tlevelsdevops@education.gov.uk'
    AppServicePlanTier: 'Standard'
    AppServicePlanSize: '1'
    AppServicePlanInstances: '2'
    AzureWebsitesRPObjectId: '7fa23fd6-537e-4d28-b0ca-54d075cce842'
    KeyVaultReadWriteObjectIds: '["94923ac5-81df-4584-8806-a69f5fae6c14"]'

  jobs:
  - job: DeploySharedInfrastructure
  #Your build pipeline references an undefined variable named ‘SQLServerAdminUsername’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
  #Your build pipeline references an undefined variable named ‘SQLServerAdminPassword’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

  steps:
  - task: AzureResourceGroupDeployment@2
    displayName: 'Azure Deployment:Create Or Update Resource Group action on $(ResourceGroupName)'
    inputs:
      azureSubscription: 'SFA-TL-Dev/Test'
      resourceGroupName: '$(ResourceGroupName)'
      location: 'West Europe'
      csmFile: '$(System.DefaultWorkingDirectory)/tl-matching/drop/azure/environment.json'
      overrideParameters: '-environmentNameAbbreviation "$(Release.EnvironmentName)" -sqlServerAdminUsername "$(SQLServerAdminUsername)" -sqlServerAdminPassword "$(SQLServerAdminPassword)" -sqlServerActiveDirectoryAdminLogin "$(SQLServerActiveDirectoryAdminLogin)" -sqlServerActiveDirectoryAdminObjectId "$(SQLServerActiveDirectoryAdminObjectId)" -threatDetectionEmailAddress "$(ThreatDetectionEmailAddress)" -appServicePlanTier "$(AppServicePlanTier)" -appServicePlanSize "$(AppServicePlanSize)" -appServicePlanInstances "$(AppServicePlanInstances)" -azureWebsitesRPObjectId "$(AzureWebsitesRPObjectId)" -keyVaultReadWriteObjectIds $(KeyVaultReadWriteObjectIds)'


# - stage: AT_Deploy
#   variables:
#     SharedASPName: tl-at-shared-asp
#     SharedKeyVaultName: tl-at-shared-kv
#     ConfigurationStorageConnectionString: 
#     UICustomHostName: 'at.industryplacementmatching.education.gov.uk'
#     CertificateName: 'wildcard-industryplacementmatching-education-gov-uk'
#     ResourceGroupName: 'tl-at-mtch-rg'
#     WorkerASPSize: '1'
#     WorkerASPInstances: '1'
#     SQLDatabaseSkuName: 'S0'
#     SQLDatabaseTier: 'Standard'
#     EmployerFeedbackTrigger: '0 30 15 * * MON-FRI'
#     ProviderFeedbackTrigger: '0 0 9 * * MON-FRI'
#     ProviderReferenceTrigger: '0 0 9 * * *'
#   jobs:
#   - job:
#     steps:
#     - task: AzureResourceGroupDeployment@2
#       displayName: 'Azure Deployment:Create Or Update Resource Group action on $(ResourceGroupName)'
#       inputs:
#         azureSubscription: 'S126-TL-Test-Service-Connection'
#         resourceGroupName: '$(ResourceGroupName)'
#         location: 'West Europe'
#         csmFile: '$(System.DefaultWorkingDirectory)/tl-matching/drop/azure/template.json'
#         overrideParameters: '-environmentNameAbbreviation "$(Release.EnvironmentName)" -workerASPSize "$(WorkerASPSize)" -workerASPInstances "$(WorkerASPInstances)" -sharedASPName "$(SharedASPName)" -sharedEnvResourceGroup "$(SharedEnvResourceGroupName)" 
#         -sharedKeyVaultName "$(SharedKeyVaultName)" -sharedSQLServerName "$(SharedSQLServerName)" -sqlDatabaseSkuName "$(SQLDatabaseSkuName)" -sqlDatabaseTier "$(SQLDatabaseTier)" -configurationStorageConnectionString "$(ConfigurationStorageConnectionString)" 
#         -uiCustomHostName "$(UICustomHostName)" -certificateName "$(CertificateName)" -employerFeedbackTrigger "$(EmployerFeedbackTrigger)" -providerFeedbackTrigger "$(ProviderFeedbackTrigger)" -providerReferenceTrigger "$(ProviderReferenceTrigger)"'
#         deploymentOutputs: armOutputs


#     - task: ARMOutputParserExtension@1
#       displayName: 'Convert ARM Template Outputs to Variables'
#       inputs:
#         armOutput: '$(armOutputs)'

#     - task: GenerateEnvironmentConfiguration@3
#       displayName: 'Process schemas in $(System.DefaultWorkingDirectory)/tl-matching/drop/config'
#       inputs:
#         SourcePath: '$(System.DefaultWorkingDirectory)/tl-matching/drop/config'
#         TargetFilename: Sfa.Tl.Matching.schema.json
#         ServiceConnectionName: 'S126-TL-Test-Service-Connection'
#         StorageAccountName: '$(ConfigStorageAccountName)'
#         TableName: Configuration

#     - task: SqlAzureDacpacDeployment@1
#       displayName: 'Azure SQL Publish'
#       inputs:
#         azureSubscription: 'S126-TL-Test-Service-Connection'
#         ServerName: '$(SharedSQLServerName).database.windows.net'
#         DatabaseName: '$(SQLDatabaseName)'
#         SqlUsername: '$(SQLServerAdminUsername)'
#         SqlPassword: '$(SQLServerAdminPassword)'
#         DacpacFile: '$(System.DefaultWorkingDirectory)/tl-matching/drop/src/Sfa.Tl.Matching.Database/bin/Release/Sfa.Tl.Matching.Database.dacpac'
#         AdditionalArguments: '/p:GenerateSmartDefaults=True'

#     - task: AzureRmWebAppDeployment@3
#       displayName: 'Azure App Service Deploy: $(WorkerFunctionAppName)'
#       inputs:
#         azureSubscription: 'S126-TL-Test-Service-Connection'
#         appType: functionapp
#         WebAppName: '$(WorkerFunctionAppName)'
#         Package: '$(System.DefaultWorkingDirectory)/tl-matching/drop/Sfa.Tl.Matching.Functions.zip'
#         UseWebDeploy: true
#         RemoveAdditionalFilesFlag: true
#         RenameFilesFlag: true