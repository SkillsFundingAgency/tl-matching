parameters:
- name: SharedEnvResourceGroupName
  type: string
- name: UICustomHostName
  type: string
- name: CertificateName
  type: string
- name: ResourceGroupName
  type: string
- name: SharedInfrastructureDependency
  type: string


jobs:
- job: DeployMatchingInfrastructure
  dependsOn: 
    - DeploySharedInfrastructure
  variables:
    SharedASPName: $[ dependencies.DeploySharedInfrastructure.outputs['armOutput.sharedASPName'] ]
    SharedKeyVaultName: $[ dependencies.DeploySharedInfrastructure.outputs['armOutput.sharedKeyVaultName'] ] 
    SharedSQLServerName: $[ dependencies.DeploySharedInfrastructure.outputs['armOutput.sharedSQLServerName'] ] 
    ConfigurationStorageConnectionString: $[ dependencies.DeploySharedInfrastructure.outputs['armOutput.configStorageConnectionString'] ]
    
  steps:
  - checkout: self
  - pwsh: |
      Write-Host $[ dependencies.DeploySharedInfrastructure.outputs['armOutput.sharedSQLServerName'] ] 
      Write-Host "--1--"
      Write-Host "$($env:ARMOUTPUT_SHAREDSQLSERVERNAME)"
      Write-Host "--2--"
      Write-Host $SharedSQLServerName
      Write-Host "--3--"
      Write-Host "$(SharedSQLServerName)"
      Write-Host "--4--"
      Write-Host "$($SharedSQLServerName)"
      Write-Host "--5--"
      Write-Host "$($env:SharedSQLServerName)"
      Write-Host "--6--"
      Write-Host "$($env:SHAREDSQLSERVERNAME)"
      Write-Host "--7--"
      Write-Host $env:SharedSQLServerName
      Write-Host "--8--"
      Write-Host $env:SHAREDSQLSERVERNAME
      

  - pwsh: Get-ChildItem -Recurse

  - template: ./Infrastructure/steps/deploy-template.yml@devopsTemplates
    parameters:
      serviceConnection: $(serviceConnection)
      subscriptionId: $(subscriptionId)
      resourceGroupName: $(ResourceGroupName)
      location: 'West Europe'
      templateFilePath: './azure/matching-environmant.json'
      armParameterOverrideString: '-environmentNameAbbreviation "s126d01-matching"         
        -sharedASPName "$(SharedASPName)" 
        -sharedEnvResourceGroup "$(SharedEnvResourceGroupName)" 
        -sharedKeyVaultName "$(SharedKeyVaultName)" 
        -sharedSQLServerName "$(SharedSQLServerName)" 
        -sqlDatabaseSkuName "$(SQLDatabaseSkuName)" 
        -sqlDatabaseTier "$(SQLDatabaseTier)" 
        -configurationStorageConnectionString "$(ConfigurationStorageConnectionString)" 
        -uiCustomHostName "$(UICustomHostName)" 
        -certificateName "$(CertificateName)" 
        -bankHolidayGeneratorTrigger "$(BankHolidayGeneratorTrigger)" 
        -employerFeedbackTrigger "$(EmployerFeedbackTrigger)" 
        -providerFeedbackTrigger "$(ProviderFeedbackTrigger)" 
        -providerReferenceTrigger "$(ProviderReferenceTrigger)"'
      processOutputs: true
  # - pwsh: |
  #     Write-Host "SharedASPName: $env:SHAREDASPNAME"
    #     Write-Host "SharedKeyVaultName: $env:SHAREDKEYVAULTNAME"
    #     Write-Host "SharedSQLServerName $env:SHAREDSQLSERVERNAME"
    #     Write-Host "ConfigurationStorageConnectionString: $env:CONFIGURATIONSTORAGECONNECTIONSTRING"

    # - task: AzureResourceGroupDeployment@2
    #   displayName: 'Azure Deployment:Create Or Update Resource Group action on $(ResourceGroupName)'
    #   inputs:
    #     azureSubscription: '$(serviceConnection)'
    #     resourceGroupName: '$(ResourceGroupName)'
    #     location: 'West Europe'
    #     csmFile: './azure/matching-environmant.json'
    #     overrideParameters: '-environmentNameAbbreviation "d01-matching"         
    #       -sharedASPName "$(SharedASPName)" 
    #       -sharedEnvResourceGroup "$(SharedEnvResourceGroupName)" 
    #       -sharedKeyVaultName "$(SharedKeyVaultName)" 
    #       -sharedSQLServerName "$(SharedSQLServerName)" 
    #       -sqlDatabaseSkuName "$(SQLDatabaseSkuName)" 
    #       -sqlDatabaseTier "$(SQLDatabaseTier)" 
    #       -configurationStorageConnectionString "$(ConfigurationStorageConnectionString)" 
    #       -uiCustomHostName "$(UICustomHostName)" 
    #       -certificateName "$(CertificateName)" 
    #       -bankHolidayGeneratorTrigger "$(BankHolidayGeneratorTrigger)" 
    #       -employerFeedbackTrigger "$(EmployerFeedbackTrigger)" 
    #       -providerFeedbackTrigger "$(ProviderFeedbackTrigger)" 
    #       -providerReferenceTrigger "$(ProviderReferenceTrigger)"'
    #     deploymentOutputs: matchingOutputs

    # - task: ARMOutputParserExtension@1
    #   displayName: 'Convert ARM Template Outputs to Variables'
    #   inputs:
    #     armOutput: '$(matchingOutputs)'    