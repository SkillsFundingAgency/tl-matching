parameters:
- name: SharedEnvResourceGroupName
  type: string
- name: UICustomHostName
  type: string
- name: CertificateName
  type: string
- name: ResourceGroupName
  type: string
- name: SharedInfrastructureDependency
  type: string


jobs:
  - job: DeployMatchingInfrastructure
    dependsOn: 
      - ${{parameters.SharedInfrastructureDependency}}
    variables:
      SharedASPName: $[ dependencies.${{parameters.SharedInfrastructureDependency}}.outputs['arm_sharedASPName'] ] 
      SharedKeyVaultName: $[ dependencies.${{parameters.SharedInfrastructureDependency}}.outputs['arm_sharedKeyVaultName'] ] 
      SharedSQLServerName: $[ dependencies.${{parameters.SharedInfrastructureDependency}}.outputs['arm_sharedSQLServerName'] ] 
      ConfigurationStorageConnectionString: $[ dependencies.${{parameters.SharedInfrastructureDependency}}.outputs['arm_configStorageConnectionString'] ]
      
    steps:
    - pwsh: |
        Write-Host $[ dependencies.${{parameters.SharedInfrastructureDependency}}.outputs['arm_sharedASPName'] ]
        Write-Host $(SharedASPName)
        Write-Host $(SharedKeyVaultName)
        Write-Host $(SharedSQLServerName)
        Write-Host $(ConfigurationStorageConnectionString)

    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Or Update Resource Group action on $(ResourceGroupName)'
      inputs:
        azureSubscription: '$(serviceConnection)'
        resourceGroupName: '$(ResourceGroupName)'
        location: 'West Europe'
        csmFile: './azure/matching-environmant.json'
        overrideParameters: '-environmentNameAbbreviation "d01-matching"         
          -sharedASPName "$(SharedASPName)" 
          -sharedEnvResourceGroup "$(SharedEnvResourceGroupName)" 
          -sharedKeyVaultName "$(SharedKeyVaultName)" 
          -sharedSQLServerName "$(SharedSQLServerName)" 
          -sqlDatabaseSkuName "$(SQLDatabaseSkuName)" 
          -sqlDatabaseTier "$(SQLDatabaseTier)" 
          -configurationStorageConnectionString "$(ConfigurationStorageConnectionString)" 
          -uiCustomHostName "$(UICustomHostName)" 
          -certificateName "$(CertificateName)" 
          -bankHolidayGeneratorTrigger "$(BankHolidayGeneratorTrigger)" 
          -employerFeedbackTrigger "$(EmployerFeedbackTrigger)" 
          -providerFeedbackTrigger "$(ProviderFeedbackTrigger)" 
          -providerReferenceTrigger "$(ProviderReferenceTrigger)"'
        deploymentOutputs: matchingOutputs

    - task: ARMOutputParserExtension@1
      displayName: 'Convert ARM Template Outputs to Variables'
      inputs:
        armOutput: '$(matchingOutputs)'    