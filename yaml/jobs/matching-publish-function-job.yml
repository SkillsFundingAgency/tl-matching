parameters:
  - name: serviceConnection
    type: string
  - name: sharedEnvironmentId
    type: string
jobs:
- job: PublishSite
  variables:
    ConfigStorageAccountName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.ConfigStorageAccountName'] ]
    uiAppName: $[ dependencies.DeployMatchingInfrastructure.outputs['armOutputs.armOutput.uiAppName'] ]
    WorkerFunctionAppName: $[ dependencies.DeployMatchingInfrastructure.outputs['armOutputs.armOutput.WorkerFunctionAppName'] ]

  pool:
    name: 'Azure Pipelines'
    vmImage: 'windows-2019'
  dependsOn: 
    - DeployMatchingInfrastructure
    - GenerateConfigs
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'appdrop'
      downloadPath: '$(System.ArtifactsDirectory)'
  
  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      appType: 'functionApp'
      appName: '$(WorkerFunctionAppName)'
      package: '$(System.ArtifactsDirectory)/appdrop/Sfa.Tl.Matching.Functions.zip'
      deploymentMethod: 'auto'