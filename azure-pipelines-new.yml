resources:
  repositories:
    - repository: self
      persistCredentials: true
      clean: true
    # - repository: devopsTools
    #   type: github
    #   endpoint: DFE-Digital
    #   name: DFE-Digital/operations-devops-tools


    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/operations-devops-pipeline-templates

trigger:
  branches:
    include:
    - NewBuild_Core
pr: none

variables:

###### shared #####
# Resource Group
#   s126-at-TLevels
# infrastructure
# 
#   s126-at-TLevels-001-matching-kv
#   s126-at-TLevels-001-matching-config-str
#   s126-at-TLevels-001-matching-shared-str
#   s126-at-TLevels-001-matching-shared-sqlsvr
#
#application:
# Resource Group
#   s126-at-TLevels-matching
# s126-at-TLevels-matching-001-str
# s126-at-TLevels-matching-001-asp
# s126-at-TLevels-matching-001-ai
# s126-at-TLevels-matching-001-web
# s126-at-TLevels-matching-001-func
# s126-at-TLevels-matching-001-sqldb

  applicationName: matching
  buildConfiguration: 'release'
  buildPlatform: 'anycpu'
  ResourceGroupName: 'tl-at-mtch-rg'
  SharedEnvResourceGroupName: 'tl-at-shared-rg'
  SharedSQLServerName: 'tl-at-shared-sql'
  testSqlDatabaseSkuName: 'S0'
  testSqlDatabaseTier: 'Standard'
  ConfigStorageAccountName: 'tlatconfigstr'
  SQLServerAdminUsername: '7acbc5ae77f74b00a9e9'
  SQLServerAdminPassword: ''
  dotnetVersion: '3.x'
   

stages:
- stage: Build
  jobs:
  - job: 'CodeBuild'
    pool:
        name: 'Azure Pipelines'
        vmImage: 'windows-2019'
    workspace:
      clean: all
    steps:
      
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK 2.1'
        inputs:
          packageType: sdk
          version: 2.1.810
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - task: GitVersion@5
        displayName: GitVersion
        inputs:
          runtime: 'core'
          updateAssemblyInfo: true
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK $(dotnetVersion)'
        inputs:
          packageType: sdk
          version: $(dotnetVersion)
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: restore
          projects: 'src/**/*.csproj'
          noCache: true
          feedsToUse: config
          nugetConfigPath: src/NuGet.config
      - task: Npm@1
        displayName: 'npm install'
        inputs:
          workingDir: src/Sfa.Tl.Matching.Web/
          verbose: false
      - task: Gulp@0
        displayName: gulp
        inputs:
          gulpFile: src/Sfa.Tl.Matching.Web/gulpfile.js
          targets: default
      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          projects: 'src/**/*.csproj'
          arguments: '--configuration $(buildConfiguration)  --no-restore'        
      - task: DotNetCoreCLI@2
        displayName: Test
        inputs:
          command: test
          projects: '**/*.UnitTests.csproj'
          arguments: '--configuration $(buildConfiguration)'
      # - task: DotNetCoreCLI@2
      #   displayName: Integration Tests
      #   inputs:
      #     command: test
      #     projects: '**/*.Web.IntegrationTests.csproj'
      #     arguments: '--configuration $(buildConfiguration)'
      - task: DotNetCoreCLI@2
        displayName: 'Publish Website'
        inputs:
          command: publish
          publishWebProjects: true
          projects: 'src/Sfa.Tl.Matching.Web/Sfa.Tl.Matching.Web.csproj'
          arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'
      - task: DotNetCoreCLI@2
        displayName: 'Publish Function App'
        inputs:
          command: publish
          publishWebProjects: false
          projects: 'src/Sfa.Tl.Matching.Functions/Sfa.Tl.Matching.Functions.csproj'
          arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'
      - task: DotNetCoreCLI@2
        displayName: 'Publish Application Integration Tests'
        inputs:
          command: publish
          publishWebProjects: false
          projects: 'src/Sfa.Tl.Matching.Application.IntegrationTests/Sfa.Tl.Matching.Application.IntegrationTests.csproj'
          arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'
      - task: DotNetCoreCLI@2
        displayName: 'Publish Web Integration Tests'
        inputs:
          command: publish
          publishWebProjects: false
          projects: 'src/Sfa.Tl.Matching.Web.IntegrationTests/Sfa.Tl.Matching.Web.IntegrationTests.csproj'
          arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'
      - task: CopyFiles@2
        displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
        inputs:
          contents: |
            azure/** 
            config/**
          targetFolder: '$(build.artifactstagingdirectory)/publish'
          overWrite: true
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)/publish'

    
  - job: 'DACPACBuild'
    pool:
        name: 'Azure Pipelines'
        vmImage: 'windows-2019'
    workspace:
      clean: all
    steps:
    - task: VSBuild@1
      displayName: 'Build DACPAC'
      inputs:
        solution: 'src\Sfa.Tl.Matching.Database\Sfa.Tl.Matching.Database.sqlproj'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        contents: |	
          src\**\*.dacpac	
        targetFolder: '$(build.artifactstagingdirectory)/publish'
        overWrite: true
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
          pathtoPublish: '$(build.artifactstagingdirectory)/publish'

