trigger:
  branches:
    include:
    - master
    - feature/*
    - bugs/*    
    exclude:
    - feature/NewBuild
    - "*"

variables:
  buildConfiguration: 'release'
  buildPlatform: 'anycpu'

jobs:
- job: 'CodeBuild'
  pool:
      name: 'Azure Pipelines'
      vmImage: 'windows-2019'
  workspace:
    clean: all
  steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        version: '2.2.x'
    - task: gittools.gitversion.gitversion-task.GitVersion@5
      displayName: GitVersion
      inputs:
        updateAssemblyInfo: true
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: 'src/**/*.csproj'
        noCache: true
        feedsToUse: config
        nugetConfigPath: src/NuGet.config
    - task: Npm@1
      displayName: 'npm install'
      inputs:
        workingDir: src/Sfa.Tl.Matching.Web/
        verbose: false
    - task: Gulp@0
      displayName: gulp
      inputs:
        gulpFile: src/Sfa.Tl.Matching.Web/gulpfile.js
        targets: default
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: 'src/**/*.csproj'
        arguments: '--configuration $(buildConfiguration)  --no-restore'        
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*.UnitTests.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: Integration Tests
      inputs:
        command: test
        projects: '**/*.Web.IntegrationTests.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'Publish Website'
      inputs:
        command: publish
        publishWebProjects: true
        projects: 'src/Sfa.Tl.Matching.Web/Sfa.Tl.Matching.Web.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'
    - task: DotNetCoreCLI@2
      displayName: 'Publish Function App'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/Sfa.Tl.Matching.Functions/Sfa.Tl.Matching.Functions.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'
    - task: DotNetCoreCLI@2
      displayName: 'Publish Application Integration Tests'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/Sfa.Tl.Matching.Application.IntegrationTests/Sfa.Tl.Matching.Application.IntegrationTests.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'
    - task: DotNetCoreCLI@2
      displayName: 'Publish Web Integration Tests'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/Sfa.Tl.Matching.Web.IntegrationTests/Sfa.Tl.Matching.Web.IntegrationTests.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        contents: |
          azure/** 
          config/**
        targetFolder: '$(build.artifactstagingdirectory)/publish'
        overWrite: true
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)/publish'

- job: 'DACPACBuild'
  pool:
      name: 'Azure Pipelines'
      vmImage: 'windows-2019'
  workspace:
    clean: all
  steps:
  - task: VSBuild@1
    displayName: 'Build DACPAC'
    inputs:
      solution: 'src\Sfa.Tl.Matching.Database\Sfa.Tl.Matching.Database.sqlproj'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      msbuildArgs: '/p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      contents: |	
        src\**\*.dacpac	
      targetFolder: '$(build.artifactstagingdirectory)/publish'
      overWrite: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
        pathtoPublish: '$(build.artifactstagingdirectory)/publish'
