@model Sfa.Tl.Matching.Models.ViewModel.SearchViewModel

@{
    ViewData["Title"] = "Select Providers";
}
@{ var result = Model.SearchResults.SearchResultProviderCount > 1 ? "results" : "result"; }
<h2 class="govuk-body"><span class="govuk-!-font-size-36 govuk-!-font-weight-bold">0 </span>@result in <span class="govuk-!-font-weight-bold tl-lowercase">@Model.SearchParameters.RoutesSelectList.SingleOrDefault(x => x.Value == @Model.SearchParameters.SelectedRouteId.ToString())?.Text </span>within <span class="govuk-!-font-weight-bold">@Model.SearchParameters.SearchRadius miles </span>of <span class="govuk-!-font-weight-bold">@Model.SearchParameters.Postcode</span></h2>

<p class="govuk-body govuk-!-margin-top-5">You can:</p>
<ul class="govuk-list govuk-list--bullet">
    <li>increase the distance from the employer’s postcode</li>
    <li>try a different skill area</li>
</ul>
<p class="govuk-body">
    If neither of these work,
    @if (Model.SearchParameters.OpportunityId > 0)
    {
    <a asp-route="PlacementInformationSave_Get"
       asp-route-id="@Model.SearchParameters.OpportunityId"
       class="govuk-link">tell us that there are no suitable providers</a>
    }
    else
    {
    <a asp-route="SaveProvisionGap"
       asp-route-SearchResultProviderCount="@Model.SearchResults.SearchResultProviderCount"
       asp-route-Postcode="@Model.SearchParameters.Postcode"
       asp-route-SearchRadius="@Model.SearchParameters.SearchRadius"
       asp-route-SelectedRouteId="@Model.SearchParameters.SelectedRouteId"
       asp-route-OpportunityId="@Model.SearchParameters.OpportunityId"
       class="govuk-link" id="tl-search-noresults">tell us that there are no suitable providers</a>
    }
    .
</p>