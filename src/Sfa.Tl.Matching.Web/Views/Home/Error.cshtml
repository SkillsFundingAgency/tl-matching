@using Microsoft.AspNetCore.Hosting
@using Microsoft.AspNetCore.Hosting.Internal
@model Sfa.Tl.Matching.Models.ViewModel.ErrorViewModel
@inject HostingEnvironment HostingEnvironment
@{
    ViewBag.Title = "Service unavailable because of a technical problem";
    var ex = ViewData["Exception"] as Exception;
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l">@ViewBag.Title</h1>
        @if (HostingEnvironment.IsDevelopment())
        {
            <h2 class="govuk-heading-l">An error occurred while processing your request.</h2>
            if (Model.ShowRequestId)
            {
                <p class="govuk-body">
                    <strong>Request ID:</strong> <code>@Model.RequestId</code>
                </p>
            }

            <h3 class="govuk-heading-m">Development Mode</h3>
            <p class="govuk-body">
                Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
            </p>
            <p class="govuk-body">
                <strong>Development environment should not be enabled in deployed applications</strong>, as it can result in sensitive information from exceptions being displayed to end users. For local debugging, development environment can be enabled by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>, and restarting the application.
            </p>
            <h1>@ex.Message</h1>
            <h2>@ex.InnerException?.Message</h2>
            <div>@ex.StackTrace</div>
        }
        else
        {
            <p class="govuk-body">Please try again later.</p>
            <a asp-action="SignOut" asp-controller="Account" class="govuk-button govuk-button--start">Finish</a>
        }
    </div>
</div>