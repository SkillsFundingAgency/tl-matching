@using Sfa.Tl.Matching.Models.Enums
@model Sfa.Tl.Matching.Models.ViewModel.OpportunityBasketViewModel

@{
    ViewData["Title"] = "All opportunities";
}

@section backButton{
    <a asp-route="GetCheckAnswersOrEditEmployer" asp-route-opportunityItemId="@Model.OpportunityItemId" class="govuk-back-link">Back</a>
    <a asp-route="GetSavedEmployerOpportunity" class="govuk-link tl-float-right govuk-!-margin-top-3" id="tl-save">Save and return later</a>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary">
                <h2 class="govuk-error-summary__title" id="error-summary-title">
                    There is a problem
                </h2>
                <div class="govuk-error-summary__body">
                    <ul class="govuk-list govuk-error-summary__list">
                        <li><a href="#tl-continue" sfa-validation-for="@Model.ReferralItems[0].IsSelected"></a></li>
                    </ul>
                </div>
            </div>
        }
        <span class="govuk-caption-l"> @Model.CompanyName</span>
        <h1 class="govuk-heading-l">@ViewData["Title"]</h1>

        <a class="govuk-button tl-button--grey" asp-route="FindProviders" asp-route-opportunityId="@Model.OpportunityId">Add another opportunity</a>

        <form asp-route="SaveSelectedOpportunities" novalidate>
            <input type="hidden" asp-for="OpportunityId" />
            <input type="hidden" asp-for="OpportunityItemId" />

            @if (Model.ReferralCount > 0 || Model.ProvisionGapCount > 0)
            {
                switch (Model.Type)
                {
                    case OpportunityBasketType.ReferralSingle:
                        <partial name="_basketReferralSingle" , model="Model.ReferralItems[0]" />
                        break;
                    case OpportunityBasketType.ProvisionGapSingle:
                        <partial name="_basketProvisionGapSingle" , model="Model.ProvisionGapItems" />
                        break;
                    case OpportunityBasketType.ReferralMultiple:
                        <partial name="_basketReferralMultiple" , model="Model.ReferralItems" />
                        break;
                    case OpportunityBasketType.MultipleReferralAndProvisionGap:
                    case OpportunityBasketType.SingleReferralAndProvisionGap:
                        <partial name="_basketTabs" , model="Model" />
                        break;
                    default:
                        throw new NotImplementedException("Selected Employer Opprtunity Scenario is not implemented");
                }
            }
        </form>
    </div>
</div>

@section jsfiles{
    <script src="~/javascripts/opportunity-basket.min.js"></script>
}