@model Sfa.Tl.Matching.Models.ViewModel.CheckAnswersViewModel
@{
    ViewData["Title"] = "Check answers";
}

@section backButton{
    @*<a asp-route="GetPlacementOrEmployer" asp-route-opportunityId="@Model.OpportunityId" asp-route-opportunityItemId="@Model.OpportunityItemId" class="govuk-back-link" id="tl-back">Back</a>*@
    <a asp-route="GetBackLink" 
       asp-route-opportunityId="@Model.OpportunityId" 
       asp-route-opportunityItemId="@Model.OpportunityItemId"
       asp-route-Postcode="0"
       asp-route-SelectedRouteId="0"
       class="govuk-back-link" id="tl-back">Back</a>
    @await Component.InvokeAsync("Cancel", new { opportunityId = Model.OpportunityId, opportunityItemId = Model.OpportunityItemId })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <span class="govuk-caption-l">@Model.CompanyNameWithAka</span>

        <h1 class="govuk-heading-l">@ViewData["Title"]</h1>
        <h2 class="govuk-heading-m">Placement information</h2>

        <dl class="govuk-summary-list govuk-!-margin-bottom-9" id="tl-placement-table">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Skill area
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.RouteName
                </dd>
                <dd class="govuk-summary-list__actions">
                    <a asp-route="GetOpportunityProviderResults"
                       asp-route-opportunityId="@Model.OpportunityId"
                       asp-route-postcode="@Model.Postcode"
                       asp-route-selectedRouteId="@Model.RouteId"
                       class="govuk-link" id="tl-change-link">Change<span class="govuk-visually-hidden"> the type of placement</span></a>
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Postcode of workplace
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.Postcode
                </dd>
                <dd class="govuk-summary-list__actions">
                    <a asp-route="GetOpportunityProviderResults"
                       asp-route-opportunityId="@Model.OpportunityId"
                       asp-route-postcode="@Model.Postcode"
                       asp-route-selectedRouteId="@Model.RouteId"
                       class="govuk-link" id="tl-change-link">Change<span class="govuk-visually-hidden"> the postcode of the workplace</span></a>
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Job role
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.JobRole
                </dd>
                <dd class="govuk-summary-list__actions">
                    <a asp-route="GetPlacementInformation" asp-route-opportunityItemId="@Model.OpportunityItemId" class="govuk-link" id="tl-change-link">Change<span class="govuk-visually-hidden"> the job role</span></a>
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Students wanted
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.PlacementsDetail
                </dd>
                <dd class="govuk-summary-list__actions">
                    <a asp-route="GetPlacementInformation" asp-route-opportunityItemId="@Model.OpportunityItemId" class="govuk-link " id="tl-change-link">Change<span class="govuk-visually-hidden"> the number of placements</span></a>

                </dd>
            </div>
        </dl>


        <hr class="govuk-section-break govuk-section-break--l ">

        <h2 class="govuk-heading-m">Selected providers</h2>


        <dl class="govuk-summary-list tl-summary-list" id="tl-providers-table">
            @for (int i = 0; i < Model.Providers.Count(); i++)
            {
                var distance = Model.Providers[i].DistanceFromEmployer;
                var milesText = "miles";
                if (distance == 1)
                {
                    milesText = "mile";
                }


            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Model.Providers[i].DisplayText
                </dt>
                <dd class="govuk-summary-list__value">
                    @($"{distance:#0.0}") @milesText from @Model.Postcode
                </dd>
                @if (Model.Providers.Count() > 1)
                {
                    <dd class="govuk-summary-list__actions">
                        <a asp-route="DeleteReferral" asp-route-referralId="@Model.Providers[i].ReferralId" asp-route-opportunityItemId="@Model.OpportunityItemId" class="govuk-link">Remove</a>
                    </dd>
                }
            </div>

            }
        </dl>

        <p class="govuk-body  govuk-!-margin-bottom-9">
            <a class="govuk-link" id="tl-change-providers"
               asp-route="GetOpportunityProviderResults"
               asp-route-opportunityId="@Model.OpportunityId"
               asp-route-opportunityItemId="@Model.OpportunityItemId"
               asp-route-Postcode="@Model.Postcode"
               asp-route-SelectedRouteId="@Model.RouteId">Change providers</a>
        </p>

        <form asp-action="SaveCheckAnswers" novalidate>
            <input asp-for="OpportunityId" type="hidden" />
            <input asp-for="OpportunityItemId" type="hidden" />

            <button type="submit" class="govuk-button" id="tl-confirm">Confirm and save opportunity</button>
        </form>
    </div>
</div>