@model Sfa.Tl.Matching.Models.ViewModel.CheckAnswersViewModel
@{
    ViewData["Title"] = "Check answers";
}

@section backButton{
    <a asp-route="GetPlacementOrEmployer" asp-route-opportunityId="@Model.OpportunityId" asp-route-opportunityItemId="@Model.OpportunityItemId" class="govuk-back-link">Back</a>
    @if (@Model.OpportunityId == 0)
    {
        <a asp-controller="Proximity" asp-action="Start" class="govuk-link tl-float-right govuk-!-margin-top-3" id="tl-finish">Cancel opportunity and start again</a>
    }
    else
    {
        <a asp-route="RemoveAndGetOpportunityBasket" asp-route-opportunityId="@Model.OpportunityId" asp-route-opportunityItemId="@Model.OpportunityItemId" class="govuk-link tl-float-right govuk-!-margin-top-3" id="tl-finish">Cancel this opportunity</a>    
    }
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l">@ViewData["Title"]</h1>

        <table class="govuk-table">
            <caption class="govuk-table__caption govuk-heading-m">Placement information</caption>
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="row">Skill area</th>
                    <td class="govuk-table__cell">
                        @Model.RouteName
                    </td>
                    <td class="govuk-table__cell">
                        <a asp-route="GetProviderResults"
                           asp-route-opportunityId="@Model.OpportunityId"
                           asp-route-searchRadius="@Model.SearchRadius"
                           asp-route-postcode="@Model.Postcode"
                           asp-route-selectedRouteId="@Model.RouteId"
                           class="govuk-link tl-float-right">Change<span class="govuk-visually-hidden"> the type of placement</span></a>
                    </td>
                </tr>
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="row">Postcode of workplace</th>
                    <td class="govuk-table__cell">
                        @Model.Postcode
                    </td>
                    <td class="govuk-table__cell">
                        <a asp-route="GetProviderResults"
                           asp-route-opportunityId="@Model.OpportunityId"
                           asp-route-searchRadius="@Model.SearchRadius"
                           asp-route-postcode="@Model.Postcode"
                           asp-route-selectedRouteId="@Model.RouteId"
                           class="govuk-link tl-float-right">Change<span class="govuk-visually-hidden"> the postcode of the workplace</span></a>
                    </td>
                </tr>
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="row">Job role</th>
                    <td class="govuk-table__cell">
                        @Model.JobRole
                    </td>
                    <td class="govuk-table__cell">
                        <a asp-route="GetPlacementInformation" asp-route-opportunityId="@Model.OpportunityId" class="govuk-link tl-float-right">Change<span class="govuk-visually-hidden"> the job role</span></a>
                    </td>
                </tr>
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="row">Students wanted</th>
                    <td class="govuk-table__cell">
                        @if (Model.PlacementsKnown.HasValue && Model.PlacementsKnown.Value)
                        {
                            @Model.Placements
                        }
                        else
                        {
                            @:at least 1
                        }
                    </td>
                    <td class="govuk-table__cell">
                        <a asp-route="GetPlacementInformation" asp-route-id="@Model.OpportunityId" class="govuk-link tl-float-right">Change<span class="govuk-visually-hidden"> the number of placements</span></a>
                    </td>
                </tr>
            </tbody>
        </table>

        <hr class="govuk-section-break govuk-section-break--l ">

        <h2 class="govuk-heading-m">Provider information</h2>
        @for (int i = 0; i < Model.Providers.Count(); i++)
        {
            var distance = @Model.Providers[i].DistanceFromEmployer;
            var milesText = "miles";
            if (distance == 1)
            {
                milesText = "mile";
            }

            <h3 class="govuk-heading-s govuk-!-margin-0">Provider @(i + 1)</h3>
            <p class="govuk-body govuk-!-margin-0">@Model.Providers[i].Name</p>
            <p class="govuk-body govuk-!-margin-0">@($"{distance:#0.0}") @milesText from <span style="text-transform: uppercase">@Model.Postcode</span></p>
            <hr class="govuk-section-break govuk-section-break--m ">
        }

        <form asp-action="SaveCheckAnswers" asp-route-OpportunityId="@Model.OpportunityId" asp-route-OpportunityItemId="OpportunityItemId" novalidate>
            <input asp-for="OpportunityId" type="hidden" />
            <input asp-for="OpportunityItemId" type="hidden" />

            <button type="submit" class="govuk-button" id="tl-confirm">Confirm and save opportunity</button>
        </form>
    </div>
</div>