{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {    
    "resourceEnvironmentName": {
      "type": "string",
      "metadata": {
        "description": "Enviroment Designation"
      }
    },
    "serviceName": {
      "type": "string",
      "metadata": {
        "description": "Service Designation"
      }
    },
    "resourceIdentifier": {
      "type": "string",
      "metadata": {
        "description": "4 Letter Service Reference to Identify service in same Resource Group"
      }
    },
    "keyVaultSecretCertificateAccessObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the Azure AD Object you want to grant Key Vault Secret and Certificate access to",
        "environmentVariable": "keyVaultSecretCertificateAccessObjectId"
      }
    },
    "keyVaultSecretAccessObjectIds": {
      "type": "array",
      "metadata": {
        "description": "Object Ids of the Azure AD Objects you want to grant Key Vault Secret access to",
        "environmentVariable": "keyVaultSecretAccessObjectIds"
      }
    },
    "microsoftAzureWebsitesRPObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the Azure Websites RP",
        "environmentVariable": "microsoftAzureWebsitesRPObjectId"
      }
    },
    "keyVaultCertificateAccessObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the Azure Websites RP",
        "environmentVariable": "Object Id of the Azure AD Object you want to grant Key Vault Secret and Certificate access toObject Id of the Azure AD Object you want to grant Certificate access to"
      }
    },
    "sharedStorageAccountContainerArray": {
      "type": "array",
      "metadata": {
        "description": "An array of the blob container names to deploy to the shared storage account."
      }
    },
    "configurationStorageAccountContainerArray": {
      "type": "array",
      "metadata": {
        "description": "An array of the blob container names to deploy to the shared configuration storage account."
      }
    },
    "sqlServerAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Sql Server Admin Password",
        "environmentVariable": "sqlServerAdminPassword"
      }
    },
    "sqlServerActiveDirectoryAdminLogin": {
      "type": "string",
      "metadata": {
        "description": "The active directory admin that will be assigned to the sql server",
        "environmentVariable": "sqlServerActiveDirectoryAdminLogin"
      }
    },
    "sqlServerActiveDirectoryAdminObjectId": {
      "type": "string",
      "metadata": {
        "description": "The object id of the active directory admin that will be assigned to the sql server",
        "environmentVariable": "sqlServerActiveDirectoryAdminObjectId"
      }
    },
    "threatDetectionEmailAddress": {
      "type": "string",
      "metadata": {
        "description": "The email address that threat alerts will be sent to",
        "environmentVariable": "threatDetectionEmailAddress"
      }
    },
    "appServicePlanSku": {
      "type": "object",
      "defaultValue": {
        "tier": "Standard",
        "size": "2",
        "instances": 2
      }
    },
    "redisCacheSku": {
      "type": "object",
      "defaultValue": "",
      "metadata": {
        "description": ""
      }
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/tl-platform-building-blocks/master/templates/",
    "resourceNamePrefix": "[toLower(concat(parameters('resourceIdentifier') , parameters('resourceEnvironmentName'), '-', parameters('serviceName')))]",
    "sharedARMStorageName": "[concat(replace(variables('resourceNamePrefix'), '-',''), 'str')]",
    "configurationStorageName": "[concat(replace(variables('resourceNamePrefix'), '-',''), 'configstr')]",
    "sqlServerName": "[toLower(concat(variables('resourceNamePrefix'),'-sql'))]",
    "keyVaultName": "[concat(variables('resourceNamePrefix'),'-kv')]",
    "redisCacheName": "[concat(variables('resourceNamePrefix'),'-redis')]",
    "appServicePlanName": "[concat(variables('resourceNamePrefix'),'-asp')]",

    "redisTemplateUri": "[concat(variables('deploymentUrlBase'), 'redis-cache.json')]",
    "keyVaultAccessPolicies": [
      {
        "objectId": "[parameters('microsoftAzureWebsitesRPObjectId')]",
        "tenantId": "[subscription().tenantId]",
        "permissions": {
          "secrets": [
            "Get"
          ]
        }
      },
      {
        "objectId": "[parameters('keyVaultSecretCertificateAccessObjectId')]",
        "tenantId": "[subscription().tenantId]",
        "permissions": {
          "secrets": [
            "Get",
            "List",
            "Set"
          ],
          "certificates": [
            "Get",
            "List",
            "Create",
            "GetIssuers",
            "ListIssuers"
          ]
        }
      },
      {
        "objectId": "[parameters('keyVaultCertificateAccessObjectId')]",
        "tenantId": "[subscription().tenantId]",
        "permissions": {
          "secrets": [
            "Get",
            "List",
            "Set"
          ],
          "certificates": [
            "Get",
            "List",
            "Create",
            "GetIssuers",
            "ListIssuers"
          ]
        }
      }
    ],
    "copy": [
      {
        "name": "parameterKeyVaultSecretAccessPolicies",
        "count": "[length(parameters('keyVaultSecretAccessObjectIds'))]",
        "input": {
          "objectId": "[parameters('keyVaultSecretAccessObjectIds')[copyIndex('parameterKeyVaultSecretAccessPolicies')]]",
          "tenantId": "[subscription().tenantId]",
          "permissions": {
            "secrets": [
              "Get",
              "List",
              "Set"
            ]
          }
        }
      }
    ]
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "key-vault",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'keyvault.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "keyVaultAccessPolicies": {
            "value": "[concat(variables('KeyVaultAccessPolicies'), variables('parameterKeyVaultSecretAccessPolicies'))]"
          },
          "enabledForDiskEncryption": {
            "value": true
          },
          "enabledForTemplateDeployment": {
            "value": true
          },
          "enableSoftDelete": {
            "value": true
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat('sql-server-key-vault-secrets-', parameters('resourceEnvironmentName'))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'keyvault-secret.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "secretName": {
            "value": "[variables('sqlServerName')]"
          },
          "secretValue": {
            "value": "[parameters('sqlServerAdminPassword')]"
          }
        }
      },
      "dependsOn": [
        "key-vault"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "config-storage-account",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('configurationStorageName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat('config-storage-account-container', parameters('configurationStorageAccountContainerArray')[copyIndex()])]",
      "type": "Microsoft.Resources/deployments",
      "condition": "[greater(length(parameters('configurationStorageAccountContainerArray')), 0)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'storage-container.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('configurationStorageName')]"
          },
          "containerName": {
            "value": "[parameters('configurationStorageAccountContainerArray')[copyIndex()]]"
          },
          "publicAccess": {
            "value": "None"
          }
        }
      },
      "copy": {
        "name": "configstorageaccountcontainercopy",
        "count": "[length(parameters('configurationStorageAccountContainerArray'))]"
      },
      "dependsOn": [
        "config-storage-account"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "arm-shared-storage",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('sharedARMStorageName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat('shared-storage-account-container', parameters('sharedStorageAccountContainerArray')[copyIndex()])]",
      "type": "Microsoft.Resources/deployments",
      "condition": "[greater(length(parameters('sharedStorageAccountContainerArray')), 0)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'storage-container.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('sharedARMStorageName')]"
          },
          "containerName": {
            "value": "[parameters('sharedStorageAccountContainerArray')[copyIndex()]]"
          },
          "publicAccess": {
            "value": "None"
          }
        }
      },
      "copy": {
        "name": "sharedstorageaccountcontainercopy",
        "count": "[length(parameters('sharedStorageAccountContainerArray'))]"
      },
      "dependsOn": [
        "arm-shared-storage"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "sql-server",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'sql-server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlServerName": {
            "value": "[variables('sqlServerName')]"
          },
          "sqlServerAdminUserName": {
            "value": "[concat('tl', uniqueString(resourceGroup().id, guid(variables('sqlServerName'))))]"
          },
          "sqlServerAdminPassword": {
            "reference": {
              "keyVault": {
                "id": "[reference('key-vault').outputs.keyVaultResourceId.value]"
              },
              "secretName": "[variables('sqlServerName')]"
            }
          },
          "sqlServerActiveDirectoryAdminLogin": {
            "value": "[parameters('sqlServerActiveDirectoryAdminLogin')]"
          },
          "sqlServerActiveDirectoryAdminObjectId": {
            "value": "[parameters('sqlServerActiveDirectoryAdminObjectId')]"
          },
          "threatDetectionEmailAddress": {
            "value": "[parameters('threatDetectionEmailAddress')]"
          },
          "sqlStorageAccountName": {
            "value": "[variables('sharedARMStorageName')]"
          }
        }
      },
      "dependsOn": [
        "arm-shared-storage",
        "[concat('sql-server-key-vault-secrets-', parameters('resourceEnvironmentName'))]"
      ]
    },
    {
      "type": "Microsoft.Cache/Redis",
      "name": "[variables('redisCacheName')]",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": "[parameters('redisCacheSku')]",
        "enableNonSslPort": false,
        "minimumTlsVersion": "1.2"
      }
    }
  ]
}
